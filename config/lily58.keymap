/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |
			bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3  &kp N4   &kp N5                          &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp MINUS
&kp TAB   &kp Q  &kp W  &kp E   &kp R    &kp T                           &kp Y  &kp U    &kp I     &kp O   &kp P    &kp EQUAL
&kp LCTRL &kp A  &kp S  &kp D   &kp F    &kp G                           &kp H  &kp J    &kp K     &kp L   &kp SEMI &kp SQT
&to 2     &kp Z  &kp X  &kp C   &kp V    &kp B     &kp LBKT   &kp RBKT   &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH &kp RET
                        &mo 1   &kp LGUI &kp LALT  &kp LSHFT  &kp SPACE  &mo 2  &kp BSPC &kp RCTRL
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |   \|  |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &kp BSLH
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
                        &trans  &trans  &trans    &trans   &trans    &trans      &trans    &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		raise_layer {
// ------------------------------------------------------------------------------------------------------------
// | GRAVE  |  F1   |   F2   |  F3   |  F4   |  F5  |                 |  F6  |  F7  |  F8  |  F9   | F10  | F11 |
// | GUI(~) | PREV  | PLAY/P | NEXT  |       |      |                 |      | PGUP |  UP  | PGDN  | HOME | F12 |
// |        |       | VOL_UP | VOLDN | MUTE  |      |                 |      | LEFT | DOWN | RIGHT | END  | DEL |
// |        | LC(Z) | LC(X)  | LC(C) | LC(V) |      |       |  |      |      |      |      |       |      |     |
//                           |       |       |      |       |  |      |      |      |      |
			bindings = <
&kp GRAVE      &kp F1      &kp F2        &kp F3        &kp F4      &kp F5                         &kp F6    &kp F7     &kp F8    &kp F9     &kp F10   &kp F11
&kp LG(TILDE)  &kp C_PREV  &kp C_PP      &kp C_NEXT    &none       &none                          &none     &kp PG_UP  &kp UP    &kp PG_DN  &kp HOME  &kp F12
&none          &none       &kp C_VOL_DN  &kp C_VOL_UP  &kp K_MUTE  &none                          &none     &kp LEFT   &kp DOWN  &kp RIGHT  &kp END   &kp DEL
&none          &kp LC(Z)   &kp LC(X)     &kp LC(C)     &kp LC(V)   &none     &none      &none     &none     &none      &none     &none      &none     &none    
                                         &none         &none       &none     &none      &none     &none     &none      &none
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		keypad_layer {
// --------------------------------------------------------------------------------------------------------------------
// |       |      |      |      |      |       |                  | NUM_LK |   (   |   )   |  MULTI |  DIV    |       |
// |       |      |      |      |      |       |                  |        |   7   |   8   |    9   |  MINUS  |       |
// |       |      |      |      |      |       |                  |        |   4   |   5   |    6   |  PLUS   |       |
// |       |      |      |      |      |       |       |  |       |        |   1   |   2   |    3   |  ENTR   |       |
//                       |      |      |       | LSHFT |  |       |   0    |  DOT  | COMMA |
			bindings = <
&none     &none  &none  &none   &none   &none                            &kp KP_NUMLOCK &kp KP_LPAR  &kp KP_RPAR  &KP_MULTIPLY  &kp KP_DIVIDE  &none
&none     &none  &none  &none   &none   &none                            &none          &kp N7       &kp N8       &kp N9        &kp KP_MINUS   &none
&none     &none  &none  &none   &none   &none                            &none          &kp N4  	 &kp N5       &kp N6        &kp KP_PLUS    &none
&to 0     &none  &none  &none   &none   &none     &none        &none     &none          &kp N1       &kp N2       &kp N3 	    &kp KP_ENTER   &none
                        &none   &none   &none     &kp LSHFT    &none     &kp N0         &kp KP_DOT   &kp KP_COMMA
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
	};
};
